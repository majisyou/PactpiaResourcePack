name: Publish ZIP on merge to main

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish:
    name: Zip and publish Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare tag and zip name
        id: vars
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          TIMESTAMP=$(date -u +"%Y%m%dT%H%M%SZ")
          TAG="v${TIMESTAMP}-${SHORT_SHA}"
          # Fixed zip name requested by user (corrected spelling)
          ZIP_NAME="PactpiaResourcePack.zip"
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT
          echo "ZIP_NAME=${ZIP_NAME}" >> $GITHUB_OUTPUT

      - name: Create ZIP archive
        run: |
          ZIP_NAME=${{ steps.vars.outputs.ZIP_NAME }}
          # Exclude Git internals and workflow files
          zip -r "$ZIP_NAME" . -x ".git/*" ".github/*" "node_modules/*" "**/__pycache__/*" || true
          ls -lh "$ZIP_NAME"

      - name: Create Release (if missing) and upload ZIP (overwrite if exists)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          TAG=${{ steps.vars.outputs.TAG }}
          ZIP=${{ steps.vars.outputs.ZIP_NAME }}
          echo "Authenticating gh CLI..."
          echo "$GITHUB_TOKEN" | gh auth login --with-token
          echo "Ensure release exists (create if missing): $TAG"
          if gh release view "$TAG" >/dev/null 2>&1; then
            echo "Release $TAG already exists"
          else
            gh release create "$TAG" --title "$TAG" --notes "Automated release created when changes were merged to main."
            echo "Release $TAG created"
          fi
          echo "Uploading $ZIP to release $TAG (will overwrite if exists)"
          gh release upload "$TAG" "$ZIP" --clobber
          echo "Upload complete"
